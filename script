#To Install Module during First run
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force -Confirm:$false
Start-Sleep -Seconds 5
Set-PSRepository 'PSGallery' -InstallationPolicy Trusted
Install-Module PSWindowsUpdate -MinimumVersion 2.1.1.2 -Confirm:$false
Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Force -Confirm:$false
Import-Module 'PSWindowsUpdate'

$adapters = Get-WmiObject Win32_NetworkAdapterConfiguration -Filter "IPEnabled = 'True'"
$adapters.SetDynamicDNSRegistration($true,$true)
ipconfig /flushdns
ipconfig /registerdns
Start-Sleep -Seconds 300
$adapters.SetDynamicDNSRegistration($true,$false)
ipconfig /flushdns
ipconfig /registerdns
Exit


Get-Disk |

Where partitionstyle -eq ‘raw’ |

Initialize-Disk -PartitionStyle MBR -PassThru |

New-Partition -AssignDriveLetter -UseMaximumSize |

Format-Volume -FileSystem NTFS -NewFileSystemLabel “disk2” -Confirm:$false





Start-Service -Name BITS

wuauclt /resetauthorization /detectnow /reportnow /updatenow





Install-WindowsUpdate -AcceptAll -ForceDownload -ForceInstall -AutoReboot -Confirm:$false




$ServiceName = 'BITS'
$arrService = Get-Service -Name $ServiceName

while ($arrService.Status -ne 'Running')
{

    Start-Service $ServiceName
    write-host $arrService.status
    write-host 'Service starting'
    Start-Sleep -seconds 10
    $arrService.Refresh()
    if ($arrService.Status -eq 'Running')
    {
        Write-Host 'Service is now Running'
    }

}
